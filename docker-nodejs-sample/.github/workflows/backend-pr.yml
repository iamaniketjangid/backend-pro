name: Backend PR CI/CD ⚙️

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build, Push & Deploy Node Backend
    runs-on: ubuntu-latest
    environment:
      name: production   # 👈 connects to the environment you created
      url: http://16.170.214.218  # optional (for dashboard link)

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: "aniuser"
          password: "dckr_pat_-ktgFv9zbZemgourVtBJzSlPtoI"

      - name: Get latest tag and increment 🔢
        run: |
          IMAGE="aniuser/node-backend"
          latest_tag=$(curl -s https://hub.docker.com/v2/repositories/${IMAGE}/tags/?page_size=100 | jq -r '.results[].name' | grep '^v[0-9]*$' | sed 's/v//' | sort -n | tail -1)

          if [[ -z "$latest_tag" ]]; then
            new_tag=v1
          else
            new_tag=v$((latest_tag + 1))
          fi

          echo "NEW_TAG=$new_tag" >> $GITHUB_ENV
          echo "🔥 Using tag: $new_tag"

      - name: Build and Push Docker Image 🐳
        run: |
          cd docker-nodejs-sample
          docker build -t aniuser/node-backend:${{ env.NEW_TAG }} .
          docker push aniuser/node-backend:${{ env.NEW_TAG }}
          echo "✅ Successfully pushed backend image with tag: ${{ env.NEW_TAG }}"

      # 🧠 EC2 DEPLOYMENT SECTION
      - name: Deploy to EC2 Instance 💻
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: "16.170.214.218"
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt update -y
            sudo apt install docker.io -y

            echo "🔑 Logging into DockerHub..."
            echo "dckr_pat_-ktgFv9zbZemgourVtBJzSlPtoI" | sudo docker login -u "aniuser" --password-stdin

            echo "🛑 Stopping old backend container..."
            sudo docker stop node-backend || true
            sudo docker rm node-backend || true

            echo "📦 Pulling new image..."
            sudo docker pull aniuser/node-backend:${{ env.NEW_TAG }}

            echo "🚀 Running new container..."
            sudo docker run -d --name node-backend -p 3000:3000 aniuser/node-backend:${{ env.NEW_TAG }}

            echo "✅ Deployment complete! Running version: ${{ env.NEW_TAG }}"
